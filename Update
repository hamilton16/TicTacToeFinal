import random
from sys import exit
NUM_SQUARES = 9
def check_win(board,token):
    #win = False
    ilst=[]
    l1 = [0,1,2]
    l2 = [0,3,6]
    l3 = [1,4,7]
    l4 = [2,5,8]
    l5 = [3,4,5]
    l6 = [6,7,8]
    l7 = [0,4,8]
    l8 = [2,4,6]
    l9 = [3,5,7]

    for index, value in enumerate(board):
        if value == token:
            ilst.append(index)
    print (ilst)
   
    
    if ilst == l1:         #or l3 or l4 or l5 or l6 or l7 or l8
        print('{} wins! Game over!'.format(token))
        return True
    elif ilst == l2: 
        print('{} wins!Game over'.format(token))
        return True
    elif ilst == l3:  
        print('{} wins!Game over'.format(token))
        return True
    elif ilst == l4:  
        print('{} wins! Game over'.format(token))
        return True
    elif ilst == l5:  
        print('{} wins!Game over'.format(token))
        return True
    elif ilst == l6:  
        print('{} wins!'.format(token))
        return True
    elif ilst == l7: 
        print('{} wins!'.format(token))
        return True
    elif ilst == l8:  
        print('{} wins!'.format(token))
        return True
    elif ilst == l9:  
        print('{} wins!'.format(token))
        return True
    else:
        print("No win")
        return False

def play_again(func):
      if func:
            r = input("Do you want to play again? Enter y for yes or n for no")
            if r =="y":
                play()
                #play == True
            else:
                print("Goodbye!")
                exit()

def board_filled(board):
    lst = []
    for index,value in enumerate(board):
        if isinstance(value,int):
            lst.append(value)
        if len(lst)== 0:
            print ("Board is filled. Nobody won.")
            r = input("Do you want to play again? Enter y for yes or n for no.")
            if r =="yes":
                play()
            else:
                print("Goodbye!")
                exit()
        else:
            break
            
    




        
def computer_play(brd):
    s=random.randint(1,9)
    
    print (s)
    #if brd[s-1] != "X" or "O":
    if isinstance(brd[s-1],str):
        print("Computer, that space is taken. Try again.")
        computer_play(brd)  
    #elif isinstance(brd[s-1],str):  
        #print("Computer, that space is taken. Try again.")
        #computer_play(brd)
    else:
        brd[s-1] = "O"
        print("Computer chose {}".format(s))    
    return brd
  
def human_play(brd):
    s = int(input("Select a square by choosing a number between 1 and 9."))
    if not isinstance(s,int):       
        print("Oops! Please enter an integer between 1 and 9, inclusive.")
        s = int(input("Select square by choosing a number between 1 and 9."))
    elif s < 1 or s > 9:
        print("Oops! Please enter an integer between 1 and 9, inclusive.")
        s = int(input("Select square by choosing a number between 1 and 9."))
    elif isinstance(brd[s-1],str):
        print("Human, that space is taken. Try again.")
        human_play(brd)
    else:
        brd[s-1] = "X"
    return brd
    
    
    

def new_board():
#Create a new empty board
    board = []
    #NUM_SQUARES = 9
    #for square in range(0,10):
    for i in range(NUM_SQUARES):
        board.append(i+1)
    #for i in range(0,3):
        #board.append('O')
    #for i in range(3,10):
        #board.append(i+1)
    #print (type(board))
    #print (type(i))
    return board

def display_board(board):
    #Display board on screen

    print( board[0], "|", board[1], "|", board[2])
    print("__________")
    print( board[3], "|", board[4], "|", board[5])
    print("__________")
    print( board[6], "|", board[7], "|", board[8])
    return #display_board(board)


    
def play():
    brd = new_board()
    display_board(brd)
    print ("You will play X and the computer will play O")
    human_play(brd)   #human play 1
    display_board(brd)
    print("Computer's turn")
    computer_play(brd)
    display_board(brd)
    human_play(brd)    #human play 2
    display_board(brd)
    print("Computer's turn")
    computer_play(brd)
    display_board(brd)
    human_play(brd)    #human play 3
    display_board(brd)
    check_win(brd,"X")
    play_again(check_win(brd,"X"))
    #if check_win(brd,"X"):
       # r = input("Do you want to play again? Yes or no")
       # if r =="yes":
            #play == True
       # else:
           # print("Goodbye!")
                #exit()
        
    print("Computer's turn")
    computer_play(brd)
    display_board(brd)
    check_win(brd,"O")
    play_again(check_win(brd,"O"))

    human_play(brd)   #human play 4
    display_board(brd)
    check_win(brd,"X")
    play_again(check_win(brd,"X"))

    print("Computer's turn")
    computer_play(brd)
    display_board(brd)
    check_win(brd,"O")
    play_again(check_win(brd,"O"))
    human_play(brd)    #human play 5
    display_board(brd)
    check_win(brd,"X")
    play_again(check_win(brd,"X"))
    board_filled(brd)
    if check_win(board,token)== False:
        print("Nobody won.")
        r = input("Do you want to play again? Yes or no")
        if r =="yes":
            play()
        else:
            print("Goodbye!")
            exit()
def start_play():
    r = input("Do you want to play Tic Tac Toe against the computer? Enter y for yes or n for no.")
   
    #brd = new_board()
   # display_board(brd)
    if r == "n":
        r == False
        print("Goodbye!")
        exit()
    else:
        
        play()

def game():
    start_play()  
    

